<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xml" href="http://localhost:4000/feed.xslt.xml"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.3.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2017-01-02T14:02:00-06:00</updated><id>http://localhost:4000//</id><title type="html">OverrideFunc | just past default</title><subtitle>Override Func, just past default. Dan Leonard: iOS Developer, Swift on Lunix, Open Source -&gt; JSQMessagesViewController, Twitter nut, Motorcycles.
</subtitle><entry><title type="html">Google Mows My Lawn</title><link href="http://localhost:4000/jekyll/update/2016/12/27/Google-Mows-My-Lawn.html" rel="alternate" type="text/html" title="Google Mows My Lawn" /><published>2016-12-27T12:44:28-06:00</published><updated>2016-12-27T12:44:28-06:00</updated><id>http://localhost:4000/jekyll/update/2016/12/27/Google-Mows-My-Lawn</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2016/12/27/Google-Mows-My-Lawn.html">&lt;p&gt;Back in September of 2015 I lost my job as an IOS Developer. It was sad and really blind sided me. But I liked to go to startup conventions and have been apart of StartupGrand for a while and was presented with the opportunity to participate in a Hackathon at Start-fest.
&lt;br /&gt;&lt;br /&gt;
&lt;img src=&quot;http://localhost:4000/assets/Crouched.JPG&quot; alt=&quot;Finished Prduct&quot; class=&quot;left half&quot; /&gt;
&lt;br /&gt;&lt;br /&gt;
This was right around the time of the internet sensation of &lt;a href=&quot;https://www.twitch.tv/twitchplayspokemon&quot;&gt;#TwitchPlaysPokemon&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Twitch Plays Pok√©mon (TPP) is a ‚Äúsocial experiment‚Äù and channel on the video streaming website Twitch, consisting of a crowdsourced attempt to play Game Freak‚Äôs and Nintendo‚Äôs Pok√©mon video games by parsing commands sent by users through the channel‚Äôs chat room.&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Twitch_Plays_Pok%C3%A9mon&quot;&gt;Wiki&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;Which is still playable I think. We really like this Idea that people were able to come together with perfect strangers and after 7 days complete the game ( even with all the üëπ Trolls out there ). So my brothers, Doug and David and I (Dan) set out to create something great along these same principles. The stipulations of the Hackathon was that you had 24 hours to build something that used the internet and we decided that we wanted to use normal parts you could purchase off of the shelves at &lt;a href=&quot;http://www.homedepot.com/&quot;&gt;Home Depot&lt;/a&gt; üõ†.&lt;/p&gt;

&lt;p&gt;We wanted something that would be helpful for our own lives and that the whole world could participate in. So we took the daunting chore of üöú  mowing our lawn and decided to outsource it to others. Yes there is the risk of participants drawing crude things in our lawn. We figured that the world as a whole actually have a very difficult time coordinating so that is a risk we were willing to take. So we set off to build a crowdsourced device that would mow our lawn for us.&lt;/p&gt;

&lt;p&gt;So here is the parts/price list from the project with links.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Electric Lawn Mower
Ryobi 20 in. &lt;a href=&quot;http://ow.ly/RRm3q&quot;&gt;40-Volt Lithium-Ion Brushless Cordless Walk-Behind Electric Lawn Mower&lt;/a&gt; 499.00&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Two Drills &lt;a href=&quot;http://ow.ly/RRmbB&quot;&gt;Ryobi 18-Volt ONE+ 1/2 in. Cordless Hammer Drill&lt;/a&gt; 69.00/ea&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://ow.ly/RRmwH&quot;&gt;Ryobi 18-Volt ONE+ Compact Radio with Bluetooth Wireless Technology&lt;/a&gt; 39.97&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Three Batteries &lt;a href=&quot;http://ow.ly/RRmrc&quot;&gt;Ryobi 18-Volt One+ High Capacity LITHIUM+ Battery&lt;/a&gt; 99.00/ea&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Two &lt;a href=&quot;http://ow.ly/RRmKp&quot;&gt;3 in. Steel Swivel Caster&lt;/a&gt; 5.48&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Two &lt;a href=&quot;http://ow.ly/RRmYQ&quot;&gt;4in Hole Dozer Hole Saw with Arbor&lt;/a&gt; 12.97/ea&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://ow.ly/RRn1N&quot;&gt;Raspberry Pi 2 micro Computer&lt;/a&gt; 35.95&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://ow.ly/RRnaR&quot;&gt;Eight channel relay board&lt;/a&gt; 18.10&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Tripod with iPhone Mounts&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Two &lt;a href=&quot;http://ow.ly/RRnmc&quot;&gt;iPods&lt;/a&gt; 199.00/ea&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://ow.ly/RRnBF&quot;&gt;18-Volt One+ 6-Port SuperCharger&lt;/a&gt; 79.00&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Zip Ties&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Four 3‚Äù-1/4 bolts with locking washer and nut&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Eight 1/2‚Äù 1‚Äù bolts and nuts&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;Step 1. The Mower&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The mower is the core of this project, it would be difficult to get the world to mow our lawn without it üôÉ. We chose this lawnmower because it was in the family of Ryobi products and it had enough space on the inside to let us mount our Raspberry Pi and it looked super cool üòé . We wanted to keep inside the same family of products as much as possible so that we could swap batteries for any part of our project.&lt;/p&gt;

&lt;p&gt;There were many pieces of the lawnmower that we will not need for our specialized version. So we stripped it down and removed anything that was not needed. First thing you need is a ‚≠êÔ∏è  star shaped screw driver to remove some of the screws holding it together. Once all the ‚ú® star screws are removed you can lift the outer shell. Be careful there is a wire connected to the top for the battery. Disconnect and full off the shell. Now you can see the complex insides of the lawnmower. Yep that is it a motor and and a power distributor, motor and a clip for the battery.
&lt;img src=&quot;http://localhost:4000/assets/TopOff.JPG&quot; alt=&quot;Mower with the top cover off and Dan working&quot; class=&quot;full&quot; /&gt;
There is a wire that runs up the handle to activate the motor. At the handle there are three screws on the plastic case containing the button. There are 6 ‚≠êÔ∏è  star screws on the back but you only need to take out the bottom 4. Once open you can take the two switches out, unscrew all the plastic tabs holding the wiring to the bar running down the handle. This will later be bypassed and hooked up too our relay board so that the raspberryPi can control it.&lt;/p&gt;

&lt;p&gt;Now you can remove the two bolts at the base of the handle and remove it completely from the lawn mower assembly To remove the back flap by popping off the clip on the end of the metal rod that acts as a hinge for the door. Slide that rod out and the door will fall off.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Step 2. Font wheels&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Normally when you mow your lawn, to make a turn you push the handle down so the front end lifts up and you rotate the lawn mower. That will not work here as there wont be a handle on the finished product. So we need to remove the front wheels and the axle that connects them too the chassis.&lt;/p&gt;

&lt;p&gt;Once they are removed, take the metal casters and attach them to the plastic that protrudes out the front of the lawn mower. These wheels swivel a full 360 degrees making them perfect for enabling better movement of the lawnmower. Drill 4 holes that line up with the hole pattern on the casters. Then take 4 1‚Äù bolts, a locking washer and a nut for each to secure the wheels to the mower. This is one thing that we will be changing on the next iteration because this lifts the lawn mower a considerable distance off the ground.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Step 3. Back wheels and drive train&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now for the drills, these are a key piece of the project because the provide the actual movement of the machine.To prep them we will need to take them apart so we can control how fast and when they rotate.The easiest way is to create a trigger between the batteries and the motor. Unscrew all the screws holding the outer shell together. You can see there are three main parts: the Motor, the trigger mechanism and the battery terminal hook up. We want to disconnect the battery so we can toggle it with our relays giving us the ability to drive. Disconnect the black wire that connects the trigger mechanism to the battery contacts.Then take a new wire and solder one end to the black wire. Take another wire and solder to the trigger mechanism. Create a small hole for our wires to escape the housing and screw the housing back around the drill. I made my wires about 15‚Äù long so I could house the electronics inside the lawn mower.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Wheel prep&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We need a way to attach the drills to the wheels securely.
This is where the Hole Saw bits come into play. So take the 3‚Äù hole saw bits and line them up with the center of the wheel. There are three holes located on bits, take a ¬º bit and drill into the wheels in the same pattern. Take 3‚Äù ¬º bolts and pass them through the bit and wheel. Take a washer, a locking washer, and a nut and tighten them down. Now you can take your new wheel bit and put it into your custom drill and tighten it down. Repeat this process for the other wheel. Next we take this contraption and attach it to the chassis.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Attach to Main Body&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now that you have the entire drill assembly put together you can secure them to the back of the lawn mower. You want this to cut grass so make sure the clearance is 1 - 2‚Äù. There is an attachment that comes with the drills that bolts on an external handle for more control. We heated this up to get the nut out of it and then used the bolt to secure the drill to the back of the lawn mower.
Drill a 1/4‚Äù hole mid level of the lawn mower then take the extra attachment bolt and slide it through the Drill and lawnmower. Place a washer and the nut on the other side. Drill another hole at the same height on the opposite side for the other wheel and attach the other drill. This makes a pivot point. To keep the drills from rotating, drill some more holes and pass zip ties through. Sinch these down to prevent the drills from moving. ( This was definitely a time saver. You may want to go back and make something a little stronger than zip ties to hold this together. )&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Step 4. The Brains&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now we need to make this things smart. We decided that a RaspberryPi was the way to go. It is easy to use gives you an entire linux OS so you can write your program in what ever language you prefer. It also has many breakout boards so you can extend it to however you would like. So the basic idea is that the Pi will interpret all the information provided by the chat room. Then it will trigger the correct relay to tell the drills on the back what to do. Initially we wanted to keep it simple so we used ‚Äúw‚Äù,‚Äùa‚Äù,‚Äùs‚Äù,‚Äùd‚Äù for directional controls. The rest is simple soldering for hooking up the relay board. Take the wires that we attached to the drills and place them in the relay terminals, securing them by screwing the terminals down.&lt;/p&gt;

&lt;p&gt;If you have any comments or questions don‚Äôt hesitate to leave them below. This project taught us allot and we were supper excited when we took first in the competition. My Brothers and I love building things and exploring new Ideas. We may make modifications and improve this and I will try to update with a new post. We got allot of news coverage for this you can check it out here &lt;a href=&quot;https://www.youtube.com/watch?v=1oE5vYW8MbI&quot;&gt;Fox News Story&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I made an &lt;a href=&quot;http://www.instructables.com/id/Google-Mows-My-Lawn/&quot;&gt;instructables&lt;/a&gt; you can check out and won a &lt;a href=&quot;http://www.instructables.com/id/Google-Mows-My-Lawn/&quot;&gt;raspberryPi competition&lt;/a&gt; with it also.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/Final.JPG&quot; alt=&quot;Finished Prduct&quot; class=&quot;left half&quot; /&gt;&lt;/p&gt;</content><summary type="html">Back in September of 2015 I lost my job as an IOS Developer. It was sad and really blind sided me. But I liked to go to startup conventions and have been apart of StartupGrand for a while and was presented with the opportunity to participate in a Hackathon at Start-fest.



This was right around the time of the internet sensation of #TwitchPlaysPokemon</summary></entry><entry><title type="html">Minimal JSQMessagesViewController Using Swift 3</title><link href="http://localhost:4000/jekyll/update/2016/11/20/Minimal-JSQMessagesViewController-Using-Swift-3.html" rel="alternate" type="text/html" title="Minimal JSQMessagesViewController Using Swift 3" /><published>2016-11-20T16:46:28-06:00</published><updated>2016-11-20T16:46:28-06:00</updated><id>http://localhost:4000/jekyll/update/2016/11/20/Minimal-JSQMessagesViewController-Using-Swift-3</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2016/11/20/Minimal-JSQMessagesViewController-Using-Swift-3.html">&lt;p&gt;I actively contribute to JSQMessagesViewController an Open Source Project that makes it super easy to get a ‚ÄúiMessages‚Äù like feature into your app. I like to keep up on the questions on &lt;a href=&quot;http://stackoverflow.com/questions/tagged/jsqmessagesviewcontroller&quot;&gt;stackoverflow&lt;/a&gt; in regard to this. Often the first step is the hardest. Many users have different levels of experience, education and understanding and Since I am a Swift Nut we‚Äôll explore implementing it in Swift.&lt;/p&gt;

&lt;p&gt;So I will outline the minimum you have to do to get this up and running. üèÉ&lt;/p&gt;

&lt;h4&gt;Step 1. Create Your project.&lt;/h4&gt;
&lt;p&gt;I am not going to go into much detail about this.
Open Xcode.
Go to File -&amp;gt; New Project.
Select single view application.
Give your project a name and save.&lt;/p&gt;

&lt;h4&gt;Step 2. Cocoapods to your computer&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://cocoapods.org/&quot;&gt;Cocoapods&lt;/a&gt; is a dependency manager for Swift and Objective-C Cocoa projects. It has over 25 thousand libraries and is used in over 1.2 million apps.&lt;/p&gt;

&lt;p&gt;To install &lt;code class=&quot;highlighter-rouge&quot;&gt;cocoapods&lt;/code&gt; open up &lt;code class=&quot;highlighter-rouge&quot;&gt;terminal&lt;/code&gt;
you can use the ‚ÄúSpotLite‚Äù Shortcut which is &lt;code class=&quot;highlighter-rouge&quot;&gt;Command + SpaceBar&lt;/code&gt; and then type &lt;code class=&quot;highlighter-rouge&quot;&gt;Terminal&lt;/code&gt; or just open it from finder -&amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;/Applications/Utilities/Terminal.app&lt;/code&gt;
simply type this command in and &lt;a href=&quot;https://cocoapods.org/&quot;&gt;cocoapods&lt;/a&gt; will be installed&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-linenos&quot; data-lang=&quot;linenos&quot;&gt; sudo gem install cocoapods&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Once this has complete you need to navigate to your project‚Äôs directory(folder). You can open Folders by using the command &lt;code class=&quot;highlighter-rouge&quot;&gt;cd path/to/file&lt;/code&gt; and you can back out of folders with the command &lt;code class=&quot;highlighter-rouge&quot;&gt;..&lt;/code&gt; but instead of navigating one folder at a time let‚Äôs just open terminal type &lt;code class=&quot;highlighter-rouge&quot;&gt;cd &lt;/code&gt; and then drag our project from the finder window onto the terminal window. This will print out the path to the project for us. Hit enter and you are now at your project‚Äôs base directory.&lt;/p&gt;

&lt;h4&gt;Step 3. Adding cocoapods to your project&lt;/h4&gt;
&lt;p&gt;Now that you are at your base directory just type&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-linenos&quot; data-lang=&quot;linenos&quot;&gt;pod init&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This creates a podfile for you. This is where you can manage &lt;code class=&quot;highlighter-rouge&quot;&gt;pods&lt;/code&gt; that you incorporate in your app. Open this file up in your favorite text editor.&lt;/p&gt;
&lt;h4&gt;Step 4. Adding JSQMessagesViewController to your project&lt;/h4&gt;
&lt;p&gt;This is the bear minimum you need to have in your podfile.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-linenos&quot; data-lang=&quot;linenos&quot;&gt;#if you're using Swift
 use_frameworks!

target 'YourProjectName' do
  pod 'JSQMessagesViewController'
end&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Save your file and close it. Now back in terminal type: &lt;code class=&quot;highlighter-rouge&quot;&gt;pod install&lt;/code&gt; This will add the JSQMessagesViewController library to your project.&lt;/p&gt;

&lt;h4&gt;Step 5. Open Workspace&lt;/h4&gt;
&lt;p&gt;Pods do an interesting thing where they manage the configuration of your project for you so you do not have to. The way that they do this is by generating a &lt;code class=&quot;highlighter-rouge&quot;&gt;.workspace&lt;/code&gt; for you. So if you had your project open in &lt;code class=&quot;highlighter-rouge&quot;&gt;XCode&lt;/code&gt; previously, Close it and open the &lt;code class=&quot;highlighter-rouge&quot;&gt;YourProjectName.workspace&lt;/code&gt; file that was generated.&lt;/p&gt;

&lt;p&gt;At this point you should be able to hit run and your project builds. You will not see anything because we have not added anything yet but you should not have any build errors.&lt;/p&gt;

&lt;h4&gt;Step 6. Adding JSQMessagesViewController to your project&lt;/h4&gt;
&lt;p&gt;Now let‚Äôs code, modify the UIViewController that comes with crating a new project.&lt;/p&gt;

&lt;p&gt;Here is the minimum amount of code you need in this file.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-swift&quot; data-lang=&quot;swift&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//  ChatViewController.swift&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//  SwiftExample&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//  Created by Dan Leonard on 12/2/16.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//  Copyright ¬© 2016 MacMeDan. All rights reserved.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIKit&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;JSQMessagesViewController&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;ChatViewController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;JSQMessagesViewController&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;messages&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;JSQMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]()&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;defaults&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UserDefaults&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;standard&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;conversation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Conversation&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;makeConversation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Here is where your messages are added.&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;incomingBubble&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;JSQMessagesBubbleImage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;outgoingBubble&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;JSQMessagesBubbleImage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;displayName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;viewDidLoad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;viewDidLoad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;incomingBubble&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;JSQMessagesBubbleImageFactory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;incomingMessagesBubbleImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIColor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;jsq_messageBubbleBlue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;outgoingBubble&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;JSQMessagesBubbleImageFactory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;outgoingMessagesBubbleImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIColor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lightGray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;collectionView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;collectionViewLayout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;incomingAvatarViewSize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zero&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;collectionView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;collectionViewLayout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;outgoingAvatarViewSize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zero&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;collectionView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;reloadData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;collectionView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;layoutIfNeeded&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// MARK: JSQMessages CollectionView DataSource&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;senderId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;1&quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;senderDisplayName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;displayName&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;collectionView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;collectionView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UICollectionView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numberOfItemsInSection&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;section&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;messages&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;collectionView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;collectionView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;JSQMessagesCollectionView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;messageDataForItemAt&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;indexPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;IndexPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;JSQMessageData&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;messages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;indexPath&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;collectionView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;collectionView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;JSQMessagesCollectionView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;messageBubbleImageDataForItemAt&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;indexPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;IndexPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;JSQMessageBubbleImageDataSource&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;messages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;indexPath&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;senderId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;senderId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;outgoingBubble&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;incomingBubble&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;makeConversation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;JSQMessages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// This is just for demo purposes, if you add more messages to this array they will appear in your conversation feed.&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;JSQMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;senderId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;053496-4509-288&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;displayName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Dan leonard&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Check out this awesome library called JSQMessagesViewController&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The last function in this code sip-pit is not required is is just a helper to show how you can add messages to your feed.&lt;/p&gt;

&lt;p&gt;That‚Äôs it üèÅ, the minimum amount of code you need to get a chat feature in your own app. There are tons of things that you can do from this point but we‚Äôll save that for another time. Don‚Äôt be afraid to explore and change things. That‚Äôs how we learn. üññ&lt;/p&gt;

&lt;p&gt;If you have any questions or critiques leave a comment I would love to üëÇ from you.&lt;/p&gt;</content><summary type="html">I actively contribute to JSQMessagesViewController an Open Source Project that makes it super easy to get a ‚ÄúiMessages‚Äù like feature into your app. I like to keep up on the questions on stackoverflow in regard to this. Often the first step is the hardest. Many users have different levels of experience, education and understanding and Since I am a Swift Nut we‚Äôll explore implementing it in Swift.</summary></entry><entry><title type="html">Lessons Learned Updating to Swift 3</title><link href="http://localhost:4000/jekyll/update/2016/10/16/Lessons-Learned-Updating-to-Swift-3.html" rel="alternate" type="text/html" title="Lessons Learned Updating to Swift 3" /><published>2016-10-16T17:46:28-05:00</published><updated>2016-10-16T17:46:28-05:00</updated><id>http://localhost:4000/jekyll/update/2016/10/16/Lessons-Learned-Updating-to-Swift-3</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2016/10/16/Lessons-Learned-Updating-to-Swift-3.html">&lt;p&gt;Recently I have been working on a project for my kids. Of course since it was a new project I decided to do it in the newest version of Swift. I wanted to make some simple games that could help my young ones learn. &lt;/p&gt;
&lt;p&gt;I love playgrounds and all that they enable us to do. I came across this project that [@uraimo][uraimo] which has a running list of [Awesome Swift Playgrounds][Awesome-Swift-Playgrounds]. There is one for spriteKit, which I really wanted to make a game with but of course it was written in Swift 2.2 I was not about to let that hold me back so I went ahead and started trying to  convert it to Swift 3. I went through all the changes that Xcode suggested and finally made it to a point where I had no errors. The issue was that the example did not perform the way it did previously. After going back and converting each function 1 by 1. I determined the function that was not being called.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-swift&quot; data-lang=&quot;swift&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;didBeginContact&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;contact&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SKPhysicsContact&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// Executed if the ball makes contact with the block.&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;contact&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bodyA&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;categoryBitMask&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CategoryBitMask&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Ball&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;contact&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bodyB&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;categoryBitMask&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CategoryBitMask&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Block&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;block&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;contact&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bodyB&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as!&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SKSpriteNode&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// Turn the block gray if it hasn't been hit yet.&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Block&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SKColor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;darkGray&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;HalfBlock&quot;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// Remove the block from the scene if it has already been hit.&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;removeFromParent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Then the next step was to figure out what I am missing but when I would try and find something it was already outdated. Even Apple‚Äôs documentation was for &lt;code class=&quot;highlighter-rouge&quot;&gt;objectiveC&lt;/code&gt;. Then it hit me that this function was not that &lt;code class=&quot;highlighter-rouge&quot;&gt;swifty&lt;/code&gt; which is what allot of the changes for Swift 3 were all about. There is to much redundancy &lt;code class=&quot;highlighter-rouge&quot;&gt;func didBeginContact(contact: SKPhysicsContact) {&lt;/code&gt; and therein lies the solution. See Xcode suggested to add the perimeter &lt;code class=&quot;highlighter-rouge&quot;&gt;contact:&lt;/code&gt; and technically the method is valid so no errors were thrown. But this method is key for detecting collision between two objects and is the method that conforms to &lt;code class=&quot;highlighter-rouge&quot;&gt;SKPhysicsContactDelegate&lt;/code&gt;.
  So since swift is aiming to be super readable if you take out the brackets it should read like a sentence of sorts. ‚Äúdid Begin Contact contact SKPhysicsContact‚Äù is a super redundant sentence in my book. Take out the first contact and all is well. I don‚Äôt know why Xcode did not remove it when it added the parameter label like it does in many other instances but that is neither here nor there.&lt;/p&gt;

&lt;p&gt;So I corrected my mistake and everything works just as it should.
Corrected Code :&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-swift&quot; data-lang=&quot;swift&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;didBegin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;contact&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SKPhysicsContact&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// Executed if the ball makes contact with the block.&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;contact&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bodyA&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;categoryBitMask&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CategoryBitMask&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Ball&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;contact&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bodyB&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;categoryBitMask&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CategoryBitMask&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Block&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;block&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;contact&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bodyB&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as!&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SKSpriteNode&lt;/span&gt;

            &lt;span class=&quot;c1&quot;&gt;// Turn the block gray if it hasn't been hit yet.&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Block&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SKColor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;darkGray&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;HalfBlock&quot;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;removeFromParent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Conclusion: When updating for Swift 3 don‚Äôt trust XCode (She will lie to you). Make sure you understand what is going on with the code and check your syntax. Allot changed but I think allot has really improved with the changes.&lt;/p&gt;

&lt;p&gt;Now go out there and explore, change variables and learn about &lt;code class=&quot;highlighter-rouge&quot;&gt;SpriteKit&lt;/code&gt; more, if you would like to check out the playground you can get the &lt;a href=&quot;https://github.com/MacMeDan/SpriteKitCollisions&quot;&gt;updated Swift 3 version here&lt;/a&gt;&lt;/p&gt;</content><summary type="html">Recently I have been working on a project for my kids. Of course since it was a new project I decided to do it in the newest version of Swift. I wanted to make some simple games that could help my young ones learn. 
I love playgrounds and all that they enable us to do. I came across this project that [@uraimo][uraimo] which has a running list of [Awesome Swift Playgrounds][Awesome-Swift-Playgrounds]. There is one for spriteKit, which I really wanted to make a game with but of course it was written in Swift 2.2 I was not about to let that hold me back so I went ahead and started trying to  convert it to Swift 3. I went through all the changes that Xcode suggested and finally made it to a point where I had no errors. The issue was that the example did not perform the way it did previously. After going back and converting each function 1 by 1. I determined the function that was not being called.</summary></entry></feed>
